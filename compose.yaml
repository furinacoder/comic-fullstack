version: "3.9"

services:
  comic-frontend:
    container_name: comic-frontend
    image: comic-frontend
    networks:
      - comic
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    ports:
      - 2222:2222
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5555
    restart: unless-stopped
    volumes:
      - public:/public
    depends_on:
      - comic-backend

  comic-backend:
    container_name: comic-backend
    image: comic-backend
    networks:
      - comic
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    ports:
      - 5555:5555
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:4321/comic?schema=public

  db:
    container_name: db
    image: postgres:13
    networks:
      - comic
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: comic
    ports:
      - 4321:4321
    volumes:
      - pgdata:/var/lib/postgresql/data

  search-engine:
    container_name: search-engine
    image: getmeili/meilisearch:v1.7
    networks:
      - comic
    restart: unless-stopped
    ports:
      - 7700:7700
    environment:
      - http_proxy
      - https_proxy
      - MEILI_NO_ANALYTICS=true
      - MEILI_ENV=production
      - MEILI_DB_PATH=/data.ms
      - MEILI_MASTER_KEY=
    volumes:
      - meili_data:/data.ms
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700"]
      interval: 10s
      timeout: 5s
      retries: 5

  # jenkins:
    # container_name: jenkins
    # image: jenkins/jenkins:lts
    # privileged: true
    # user: root
    # ports:
    #   - 8080:8080
    #   - 50000:50000
    # volumes:
    #   - jenkins_home:/var/jenkins_home
    #   - jenkins_docker.sock:/var/run/docker.sock
  # docker logs jenkins | less
  # https://www.cloudbees.com/blog/how-to-install-and-run-jenkins-with-docker-compose

  # agent:
  #   image: jenkins/ssh-agent:jdk11
  #   privileged: true
  #   user: root
  #   container_name: agent
  #   expose:
  #     - 22
  #   environment:
  #     - JENKINS_AGENT_SSH_PUBKEY=ssh-rsa <pubkey>

volumes:
  pgdata: {}
  public: {}
  meili_data: {}
  # jenkins_home: {}
  # jenkins_docker.sock: {}

networks:
  comic:
    driver: bridge
